TAC(TAC_BEGINFUN, main, 0, 0);
TAC(TAC_COPY, a, 666, 0);
TAC(TAC_SUB, mYWeeirT_emp0, a, i);
TAC(TAC_COPY, a, mYWeeirT_emp0, 0);
TAC(TAC_COPY, a, 5, 0);
TAC(TAC_COPY_VEC, v, a, 55);
TAC(TAC_MUL, mYWeeirT_emp1, 55, i);
TAC(TAC_COPY_VEC, v, a, mYWeeirT_emp1);
TAC(TAC_VEC_ACCESS, mYWeeirT_emp2, v, 5);
TAC(TAC_PRINT, mYWeeirT_emp2, 0, 0);
TAC(TAC_PRINT, a, 0, 0);
TAC(TAC_ADD, mYWeeirT_emp3, 2, 3);
TAC(TAC_COPY, i, mYWeeirT_emp3, 0);
TAC(TAC_PRINT, "Digite um numero: \n", 0, 0);
TAC(TAC_READ, 0, 0, 0);
TAC(TAC_COPY, a, 0, 0);
TAC(TAC_LABEL, mYLabule0, 0, 0);
TAC(TAC_EQ, mYWeeirT_emp4, i, 10);
TAC(TAC_JUMP_TRUE, mYLabule1, mYWeeirT_emp4, 0);
TAC(TAC_FUNC_ARGS, i, 0, 0);
TAC(TAC_FUNC_ARGS, 1, 0, 0);
TAC(TAC_FUNCALL, mYWeeirT_emp5, incn, 0);
TAC(TAC_COPY, i, mYWeeirT_emp5, 0);
TAC(TAC_FUNC_ARGS, a, 0, 0);
TAC(TAC_FUNC_ARGS, 1, 0, 0);
TAC(TAC_FUNCALL, mYWeeirT_emp6, incn, 0);
TAC(TAC_COPY, a, mYWeeirT_emp6, 0);
TAC(TAC_JUMP, mYLabule0, 0, 0);
TAC(TAC_LABEL, mYLabule1, 0, 0);
TAC(TAC_ADD, mYWeeirT_emp7, i, f);
TAC(TAC_MUL, mYWeeirT_emp8, 43, b);
TAC(TAC_SUB, mYWeeirT_emp9, mYWeeirT_emp7, mYWeeirT_emp8);
TAC(TAC_COPY, a, mYWeeirT_emp9, 0);
TAC(TAC_LABEL, mYLabule2, 0, 0);
TAC(TAC_DIFF, mYWeeirT_emp10, i, 40);
TAC(TAC_JUMP_TRUE, mYLabule3, mYWeeirT_emp10, 0);
TAC(TAC_PRINT, "Ola", 0, 0);
TAC(TAC_JUMP, mYLabule2, 0, 0);
TAC(TAC_LABEL, mYLabule3, 0, 0);
TAC(TAC_READ, 0, 0, 0);
TAC(TAC_COPY, c c, 0, 0);
TAC(TAC_PRINT, "Incrementado algumas vezes a fica ", 0, 0);
TAC(TAC_PRINT, a, 0, 0);
TAC(TAC_PRINT, "\n", 0, 0);
TAC(TAC_JUMP, mYLabule4, 0, 0);
TAC(TAC_EQ, mYWeeirT_emp11, a, 15);
TAC(TAC_NOT, mYWeeirT_emp12, mYWeeirT_emp11, 0);
TAC(TAC_JUMP_FALSE, mYLabule5, mYWeeirT_emp12, 0);
TAC(TAC_PRINT, "A=15\n", 0, 0);
TAC(TAC_LABEL, mYLabule5, 0, 0);
TAC(TAC_EQ, mYWeeirT_emp13, a, 15);
TAC(TAC_EQ, mYWeeirT_emp14, a, 17);
TAC(TAC_OR, mYWeeirT_emp15, mYWeeirT_emp13, mYWeeirT_emp14);
TAC(TAC_JUMP_FALSE, mYLabule6, mYWeeirT_emp15, 0);
TAC(TAC_PRINT, "A igual a 15 ou 17\n", 0, 0);
TAC(TAC_LABEL, mYLabule6, 0, 0);
TAC(TAC_EQ, mYWeeirT_emp16, i, 100);
TAC(TAC_JUMP_FALSE, mYLabule7, mYWeeirT_emp16, 0);
TAC(TAC_PRINT, "Nao tem como isso...\n", 0, 0);
TAC(TAC_JUMP, mYLabule8, 0, 0);
TAC(TAC_LABEL, mYLabule7, 0, 0);
TAC(TAC_PRINT, "OK!\n", 0, 0);
TAC(TAC_LABEL, mYLabule8, 0, 0);
TAC(TAC_DIFF, mYWeeirT_emp17, a, 13);
TAC(TAC_JUMP_FALSE, mYLabule9, mYWeeirT_emp17, 0);
TAC(TAC_PRINT, "hi", 0, 0);
TAC(TAC_JUMP, mYLabule10, 0, 0);
TAC(TAC_LABEL, mYLabule9, 0, 0);
TAC(TAC_PRINT, "bye", 0, 0);
TAC(TAC_LABEL, mYLabule10, 0, 0);
TAC(TAC_GREATER, mYWeeirT_emp18, a, 34);
TAC(TAC_JUMP_FALSE, mYLabule13, mYWeeirT_emp18, 0);
TAC(TAC_GREATER, mYWeeirT_emp19, a, b);
TAC(TAC_JUMP_FALSE, mYLabule11, mYWeeirT_emp19, 0);
TAC(TAC_PRINT, oi, 0, 0);
TAC(TAC_JUMP, mYLabule12, 0, 0);
TAC(TAC_LABEL, mYLabule11, 0, 0);
TAC(TAC_RETURN, 1, 0, 0);
TAC(TAC_LABEL, mYLabule12, 0, 0);
TAC(TAC_LABEL, mYLabule13, 0, 0);
TAC(TAC_JUMP, mYLabule14, 0, 0);
TAC(TAC_FUNC_ARGS, f, 0, 0);
TAC(TAC_FUNCALL, mYWeeirT_emp20, func, 0);
TAC(TAC_COPY, i, mYWeeirT_emp20, 0);
TAC(TAC_ENDFUN, main, 0, 0);
TAC(TAC_BEGINFUN, incn, 0, 0);
TAC(TAC_ADD, mYWeeirT_emp21, x, n);
TAC(TAC_RETURN, mYWeeirT_emp21, 0, 0);
TAC(TAC_SUB, mYWeeirT_emp22, x, n);
TAC(TAC_RETURN, mYWeeirT_emp22, 0, 0);
TAC(TAC_MUL, mYWeeirT_emp23, x, n);
TAC(TAC_RETURN, mYWeeirT_emp23, 0, 0);
TAC(TAC_DIV, mYWeeirT_emp24, x, n);
TAC(TAC_RETURN, mYWeeirT_emp24, 0, 0);
TAC(TAC_ENDFUN, incn, 0, 0);
TAC(TAC_BEGINFUN, func, 0, 0);
TAC(TAC_ENDFUN, func, 0, 0);
Compilation successfull 
